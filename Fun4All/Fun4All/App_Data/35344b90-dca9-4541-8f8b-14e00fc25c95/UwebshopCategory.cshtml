@*
uWebshop Razor Example: Category Details
=================================
You can use this example to display category information based on the category url.
*@

@using uWebshop.API
@inherits umbraco.MacroEngines.DynamicNodeContext
@{
	// get current category based on category url
	var currentCategory = Catalog.GetCategory();

	if (currentCategory != null)
	{
		<h2>@currentCategory.Title</h2>
		@Html.Raw(currentCategory.Description)

		if (currentCategory.Images.Any())
		{
			<h3>Images</h3>
			foreach (var image in @currentCategory.Images)
			{
				var imageNode = Model.MediaById(image.Id);
				<img src="@imageNode.umbracoFile" alt="@imageNode.altText" />
			}
		}

		if (currentCategory.SubCategories.Any())
		{
			<h3>Subcategories</h3>
			<ul>
				@RenderCategories(currentCategory)
			</ul>
		}

		if (currentCategory.Products.Any())
		{
			<h3>Products</h3>
			<ul>
				@RenderProducts(currentCategory)
			</ul>
		}
	}
}

@helper RenderCategories(ICategory category)
{
	foreach (var subcategory in category.SubCategories.OrderBy(x => x.SortOrder))
	{
		<li>
			<a href="@subcategory.Url" title="@subcategory.Title">@subcategory.Title</a>
        
			@if (subcategory.SubCategories.Any() || subcategory.Products.Any())
			{
				<ul>
					@RenderCategories(subcategory)
				</ul>
			}
		</li>
	}
}

@helper RenderProducts(ICategory category)
{
	foreach (var product in category.Products.OrderBy(x => x.Title))
	{
		<li>
			<a href="@product.NiceUrl()" title="@product.Title">@product.Title</a>
		</li>
	}
}